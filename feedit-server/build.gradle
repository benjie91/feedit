plugins {
  id 'idea'
  id 'org.jetbrains.kotlin.jvm' version "1.3.50"
  id "org.jetbrains.kotlin.plugin.spring" version "1.3.50"
  id "org.jetbrains.kotlin.plugin.jpa" version "1.3.50"
  id "org.jetbrains.kotlin.plugin.allopen" version "1.3.50"
  id "org.jlleitschuh.gradle.ktlint" version "8.2.0"
  id "org.springframework.boot" version "2.1.8.RELEASE"
  id "io.spring.dependency-management" version "1.0.8.RELEASE"
  id 'com.google.cloud.tools.jib' version '1.8.0'
  id 'com.moowork.node' version '1.3.1'
}

repositories {
  jcenter()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
  implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")  // Required for Kotlin integration
  implementation("org.jetbrains.kotlin:kotlin-reflect")
  implementation("org.springframework.boot:spring-boot-starter-web")
  implementation("org.springframework.boot:spring-boot-starter-data-jpa")
  implementation("com.fasterxml.jackson.module:jackson-module-kotlin")

  runtimeOnly("org.postgresql:postgresql")
  runtimeOnly("org.springframework.boot:spring-boot-devtools")

  // Junit 5 for testing
  testImplementation("org.springframework.boot:spring-boot-starter-test") {
    exclude group: "junit", module: "junit"
  }
  testImplementation("org.junit.jupiter:junit-jupiter-api")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
  testImplementation("com.ninja-squad:springmockk:1.1.2")
}

test {
  useJUnitPlatform()
}

task copyWebApp(type: Copy) {
  from "${rootDir}/feedit-frontend/build"
  into 'build/resources/main/static/.'
}

task appYarnInstall(type: YarnTask) {
  description = "Installs all dependencies from package.json"
  println("${rootDir}")
  workingDir = file("${rootDir}/feedit-frontend")
  args = ["install"]
}

task appYarnBuild(type: YarnTask) {
  description = "Builds production version of the webapp"
  workingDir = file("${rootDir}/feedit-frontend")
  args = ["build"]
}

appYarnBuild.dependsOn appYarnInstall
copyWebApp.dependsOn appYarnBuild
compileJava.dependsOn copyWebApp
